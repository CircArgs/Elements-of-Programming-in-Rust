initSidebarItems({"fn":[["flag_sort","sorts a slice of elements implementing Ord iterates through the slice twice - forwards moving elements less than the pivot to the front; backwards moving elements greater than the pivot to the end of the slice. the position of the pivot must be tracked in order to have the pivot value to compare to without having T implement Copy also for the recursive subslicing to work excluding elements equal to the pivot value unlike `flag_sort_naive` the partitioning takes O(n) time since it iterated through the array twice once from the beginning and once from the rear (and two more short iterations from the final pivot location)"],["flag_sort_naive","the solution keeps track of two pivot points to know the \"middle stripe\" start and end starting from the beginning it moves larger elements to the end and equal elements to the middle stripe then works on the back half to move smaller elements to the beginning all while making sure not to disturb remaining elements in the start or end loops. This solution has time complexity per slice of O(n^2) because each time we fine an element that is not in the appropriate half we do a rotate which will shift all n elements of the slice - hence 'naive'"]]});