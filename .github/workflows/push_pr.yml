on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

name: test-and-docs

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all-features --no-fail-fast
        env:
          CARGO_INCREMENTAL: "0"
          RUSTFLAGS: "-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests"
          RUSTDOCFLAGS: "-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests"
      - name: grcov
        id: coverage
        uses: actions-rs/grcov@v0.1
        with:
          config: configs/grcov.yml
      - name: Show the coverage report
        run: cat ${{ steps.coverage.outputs.report }}
      - uses: actions/checkout@master
      - uses: codecov/codecov-action@v1
        with:
          file: ${{ steps.coverage.outputs.report }}
          fail_ci_if_error: true # optional (default = false)
  docs:
    runs-on: ubuntu-latest
    steps:
      - name: Checking out code...
        id: checkout
        uses: actions/checkout@master
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: doc
          args: --no-deps --document-private-items --target-dir ../docs_new
      - run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git fetch origin
          git checkout docs
          rm -rf docs
          mv ../docs_new docs
          echo "<head><meta http-equiv=\"refresh\" content=\"0; URL=./doc/Elements_of_Programming_in_Rust/index.html\" /></head><body>hello</body>" >> ./docs/index.html
          git add .
          git_hash=$(git rev-parse --short "$GITHUB_SHA")
          git commit -m "docs for commit hash $git_hash"
          git push
